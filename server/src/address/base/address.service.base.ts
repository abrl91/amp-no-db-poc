/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */

import { Customer } from "src/customer/base/Customer";
import { CustomerFindManyArgs } from "src/customer/base/CustomerFindManyArgs";
import { Address } from "./Address";
import { AddressCreateInput } from "./AddressCreateInput";
import { AddressFindManyArgs } from "./AddressFindManyArgs";
import { AddressFindUniqueArgs } from "./AddressFindUniqueArgs";
import { AddressUpdateInput } from "./AddressUpdateInput";
import { AddressWhereUniqueInput } from "./AddressWhereUniqueInput";
import { CreateAddressArgs } from "./CreateAddressArgs";
import { DeleteAddressArgs } from "./DeleteAddressArgs";
import { UpdateAddressArgs } from "./UpdateAddressArgs";

export class AddressServiceBase {
  constructor() {}

  async count(
    args: AddressFindManyArgs
  ): Promise<number> {
    throw new Error('Not Implemented');;
  }

  async findMany(
    args: AddressFindManyArgs): Promise<Address[]> {
      throw new Error('Not Implemented');
  }

  async findOne(
    args: AddressWhereUniqueInput | AddressFindUniqueArgs): Promise<Address> {
    throw new Error('Not Implemented');
  }
  async create(args: AddressCreateInput | CreateAddressArgs): Promise<Address> {
    throw new Error('Not Implemented');
  }
  async update(args: AddressUpdateInput | UpdateAddressArgs): Promise<Address> {
    throw new Error('Not Implemented');
  }
  async delete(args: AddressWhereUniqueInput | DeleteAddressArgs): Promise<Address> {
    throw new Error('Not Implemented');
  }

  async findCustomers(
    parentId: string,
    args: AddressWhereUniqueInput | CustomerFindManyArgs
  ): Promise<Customer[]> {
    throw new Error('Not Implemented');
  }
}
